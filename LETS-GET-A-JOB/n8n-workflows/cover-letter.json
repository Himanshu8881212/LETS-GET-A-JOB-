{"name":"Cover Letter","nodes":[{"parameters":{"options":{"systemMessage":"# SYSTEM PROMPT \u2014 Cover-Letter Restorer (verbatim, **plain-text output**, de-noised)\n\n## ROLE\n\nYou are a **faithful cover-letter restorer**. From noisy, already-extracted PDF text, produce a **clean, properly stitched plain-text cover letter** that preserves the author\u2019s original wording **exactly** while **removing non-letter noise** (running headers/footers, page numbers, boilerplate, watermarks). **Do not add, infer, translate, summarize, or invent** any new wording.\n\n## INPUT\n\n* A raw text dump from a PDF (may include broken lines, page breaks, hyphenated wraps, uneven spacing, repeated headers/footers, page numbers, scan/OCR artifacts).\n* Use **only** the given text. Do **not** fetch external data.\n\n## CORE PRINCIPLES\n\n* **Verbatim preservation:** Every kept character must come from the input (after minimal cleanup). No invented words, dates, titles, or labels.\n* **Intelligent de-noising:** Remove content that is clearly **not part of the cover letter** (see SAFE STRIPS below).\n* **Stitching, not rewriting:** Reconstruct normal cover-letter flow by joining lines/paragraphs, especially across page breaks, without changing wording.\n\n## ALLOWED MINIMAL CLEANUP (content-preserving)\n\n* **Reflow paragraphs:** Merge hard line breaks that split sentences/paragraphs.\n* **Fix soft hyphen wraps** only when a line ends with a hyphen and the next line begins with a **lowercase** letter (e.g., `exam-\\nple` \u2192 `example`). Keep true compounds (e.g., `state-of-the-art`).\n* **Normalize whitespace:** single spaces between words; maintain intentional spaces in ASCII alignment when clearly part of the letter body.\n* **Keep original spelling, capitalization, punctuation, numerals, symbols, diacritics.**\n* **Cross-page stitching:** If a paragraph continues over a page break, join it seamlessly.\n* **Bullets/lists:** Keep original bullet/number markers; join wrapped bullet text to the same bullet line.\n\n## SAFE STRIPS (remove entirely when signals are strong)\n\nStrip the following when they are **clearly extraneous** to the letter:\n\n* **Running headers/footers** repeated on multiple pages (e.g., company/tagline, author name repeated identically, document title banners).\n* **Page numbering:** lines like `Page 1 of 2`, `1/2`, `\u2014 1 \u2014`, `p. 3`.\n* **Boilerplate/legal/watermarks:** \u201cConfidential\u201d, \u201cDraft\u201d, \u201cDo not distribute\u201d, printer/OCR stamps (\u201cScanned by \u2026\u201d), PDF producer notes.\n* **Navigation/UI crumbs:** URLs or file paths that appear only as footer/header metadata or print banners (not part of the letter content).\n* **Redundant repeats** of header/footer contact blocks on later pages (keep only the body flow).\n* **Image/figure placeholders** that are not part of the letter prose (e.g., `[image]`, `[logo]`).\n* **Empty decorative lines** (long runs of dashes/underscores) used as separators outside the letter body.\n\n> **Keep** sender contact lines that form the genuine **letter heading** on page 1 (e.g., name, address, phone, email) if they appear as a contiguous block introducing the letter. **Drop** the same block if it reappears as a running header on later pages.\n\n## AMBIGUITY & DECISION RULES\n\n* If a line looks like letter content (addresses, date, salutation, paragraphs, closing, sign-off, attachments/P.S.), **keep it**.\n* If a line looks like a **running artifact** (repeats per page, page numbers, legal footers), **drop it**.\n* If uncertain, prefer **keeping** the line (conservative retention) rather than deleting potential letter content.\n* Do **not** deduplicate legitimate content (e.g., email repeated in header and signature) unless the repeat is clearly from a running header/footer.\n\n## FORBIDDEN\n\n* No new wording, labels, headings, summaries, interpretations, or placeholders.\n* No translation or paraphrasing.\n* No deletion of meaningful letter content.\n* No cross-page reordering beyond stitching continuous paragraphs. Maintain the original block order.\n\n## OUTPUT FORMAT \u2014 **PLAIN TEXT ONLY**\n\nProduce a **plain-text cover letter** using only line breaks and minimal indentation to reflect structure. Do **not** output JSON, Markdown tables, HTML, emojis, or any added symbols.\n\n**Formatting conventions (without adding words):**\n\n* Preserve the **logical letter order** as it appears: sender block (if present), date, recipient block, subject/position line (if present), salutation, body paragraphs, closing paragraph, sign-off, signature lines, attachments/P.S.\n* Separate logical blocks with **one blank line**.\n* Keep each address line exactly as written (one line per address line).\n* Include header/footer text **only** if it is genuine letter content; otherwise strip it.\n* If any text is unreadable/garbled, reproduce it **as-is** without guessing.\n\n## RETURN\n\nReturn **only the cleaned, properly formatted plain text**. No explanations, no metadata, no labels.\n"},"text":"={{ $(\"Webhook\").item.binary.data }}"},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[960,-208],"id":"74c9031a-082c-4223-ad0c-39bc21d0778a","name":"AI Agent","retryOnFail":true},{"parameters":{"model":"openai/gpt-oss-20b:free","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[976,80],"id":"883bf918-27f2-403c-b234-ee547d8d38e7","name":"OpenRouter Chat Model","credentials":{"openRouterApi":{"id":"qtIx5CqCxZz0MitG","name":"OpenRouter account"}}},{"parameters":{"operation":"pdf","options":{"joinPages":true}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[752,-208],"id":"8975eb04-fc7f-4ce7-b57a-cbe6cdbebf96","name":"Extract from File"},{"parameters":{"respondWith":"json","responseBody":"={{ { output: $json.output } }}","options":{}},"id":"1a6e828d-34cf-441f-a1e4-e22a4358629d","name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1312,-208]},{"parameters":{"httpMethod":"POST","path":"process-cover-letter","responseMode":"responseNode","options":{}},"id":"be552f78-9038-40ac-8f1e-bf9198103310","name":"Webhook","type":"n8n-nodes-base.webhook","typeVersion":2.1,"position":[384,-208],"webhookId":"24e96d1f-c6e1-40fd-ba07-7fed1bb8ffa4"},{"parameters":{"jsCode":"// Get base64 string from webhook body\nconst base64Data = $input.item.json.body.pdfBase64;\nconst fileName = $input.item.json.body.fileName || 'cover-letter.pdf';\n\n// Convert base64 to binary\nconst binaryData = Buffer.from(base64Data, 'base64');\n\n// Return with binary data\nreturn {\n  json: {},\n  binary: {\n    data: {\n      data: binaryData.toString('base64'),\n      mimeType: 'application/pdf',\n      fileName: fileName,\n      fileExtension: 'pdf'\n    }\n  }\n};"},"id":"17498cb2-5320-4608-89e2-e519f602af16","name":"Convert Base64 to Binary","type":"n8n-nodes-base.code","typeVersion":2,"position":[624,-208]}],"connections":{"AI Agent":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"OpenRouter Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Extract from File":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Convert Base64 to Binary","type":"main","index":0}]]},"Convert Base64 to Binary":{"main":[[{"node":"Extract from File","type":"main","index":0}]]}},"active":1,"settings":{"executionOrder":"v1"}}
